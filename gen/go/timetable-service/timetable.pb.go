// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: timetable-service/timetable.proto

package timetable

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimetableRecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HospitalId *int64                 `protobuf:"varint,1,opt,name=hospitalId,proto3,oneof" json:"hospitalId,omitempty"`
	DoctorId   int64                  `protobuf:"varint,2,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	From       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Room       string                 `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *TimetableRecordInfo) Reset() {
	*x = TimetableRecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimetableRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimetableRecordInfo) ProtoMessage() {}

func (x *TimetableRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimetableRecordInfo.ProtoReflect.Descriptor instead.
func (*TimetableRecordInfo) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{0}
}

func (x *TimetableRecordInfo) GetHospitalId() int64 {
	if x != nil && x.HospitalId != nil {
		return *x.HospitalId
	}
	return 0
}

func (x *TimetableRecordInfo) GetDoctorId() int64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *TimetableRecordInfo) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TimetableRecordInfo) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TimetableRecordInfo) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

type AppointmentRecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AppointmentRecordInfo) Reset() {
	*x = AppointmentRecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentRecordInfo) ProtoMessage() {}

func (x *AppointmentRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentRecordInfo.ProtoReflect.Descriptor instead.
func (*AppointmentRecordInfo) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{1}
}

func (x *AppointmentRecordInfo) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type CreateTimetableRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimetableRecordInfo *TimetableRecordInfo `protobuf:"bytes,1,opt,name=timetableRecordInfo,proto3" json:"timetableRecordInfo,omitempty"`
}

func (x *CreateTimetableRecordRequest) Reset() {
	*x = CreateTimetableRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTimetableRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimetableRecordRequest) ProtoMessage() {}

func (x *CreateTimetableRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimetableRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateTimetableRecordRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTimetableRecordRequest) GetTimetableRecordInfo() *TimetableRecordInfo {
	if x != nil {
		return x.TimetableRecordInfo
	}
	return nil
}

type CreateAppointmentRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentRecordInfo *AppointmentRecordInfo `protobuf:"bytes,1,opt,name=appointmentRecordInfo,proto3" json:"appointmentRecordInfo,omitempty"`
}

func (x *CreateAppointmentRecordRequest) Reset() {
	*x = CreateAppointmentRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppointmentRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppointmentRecordRequest) ProtoMessage() {}

func (x *CreateAppointmentRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppointmentRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateAppointmentRecordRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppointmentRecordRequest) GetAppointmentRecordInfo() *AppointmentRecordInfo {
	if x != nil {
		return x.AppointmentRecordInfo
	}
	return nil
}

type GetTimetableByHospitalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HospitalId int64                  `protobuf:"varint,1,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	From       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetTimetableByHospitalIdRequest) Reset() {
	*x = GetTimetableByHospitalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimetableByHospitalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimetableByHospitalIdRequest) ProtoMessage() {}

func (x *GetTimetableByHospitalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimetableByHospitalIdRequest.ProtoReflect.Descriptor instead.
func (*GetTimetableByHospitalIdRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{4}
}

func (x *GetTimetableByHospitalIdRequest) GetHospitalId() int64 {
	if x != nil {
		return x.HospitalId
	}
	return 0
}

func (x *GetTimetableByHospitalIdRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetTimetableByHospitalIdRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetTimetableByHospitalIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimetableRecordsInfo []*TimetableRecordInfo `protobuf:"bytes,1,rep,name=timetableRecordsInfo,proto3" json:"timetableRecordsInfo,omitempty"`
}

func (x *GetTimetableByHospitalIdResponse) Reset() {
	*x = GetTimetableByHospitalIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimetableByHospitalIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimetableByHospitalIdResponse) ProtoMessage() {}

func (x *GetTimetableByHospitalIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimetableByHospitalIdResponse.ProtoReflect.Descriptor instead.
func (*GetTimetableByHospitalIdResponse) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{5}
}

func (x *GetTimetableByHospitalIdResponse) GetTimetableRecordsInfo() []*TimetableRecordInfo {
	if x != nil {
		return x.TimetableRecordsInfo
	}
	return nil
}

type GetTimetableByDoctorIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId int64                  `protobuf:"varint,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	From     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetTimetableByDoctorIdRequest) Reset() {
	*x = GetTimetableByDoctorIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimetableByDoctorIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimetableByDoctorIdRequest) ProtoMessage() {}

func (x *GetTimetableByDoctorIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimetableByDoctorIdRequest.ProtoReflect.Descriptor instead.
func (*GetTimetableByDoctorIdRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{6}
}

func (x *GetTimetableByDoctorIdRequest) GetDoctorId() int64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *GetTimetableByDoctorIdRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetTimetableByDoctorIdRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetTimetableByDoctorIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimetableRecordsInfo []*TimetableRecordInfo `protobuf:"bytes,1,rep,name=timetableRecordsInfo,proto3" json:"timetableRecordsInfo,omitempty"`
}

func (x *GetTimetableByDoctorIdResponse) Reset() {
	*x = GetTimetableByDoctorIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimetableByDoctorIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimetableByDoctorIdResponse) ProtoMessage() {}

func (x *GetTimetableByDoctorIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimetableByDoctorIdResponse.ProtoReflect.Descriptor instead.
func (*GetTimetableByDoctorIdResponse) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{7}
}

func (x *GetTimetableByDoctorIdResponse) GetTimetableRecordsInfo() []*TimetableRecordInfo {
	if x != nil {
		return x.TimetableRecordsInfo
	}
	return nil
}

type GetTimetableByHospitalRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room string                 `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	From *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetTimetableByHospitalRoomRequest) Reset() {
	*x = GetTimetableByHospitalRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimetableByHospitalRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimetableByHospitalRoomRequest) ProtoMessage() {}

func (x *GetTimetableByHospitalRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimetableByHospitalRoomRequest.ProtoReflect.Descriptor instead.
func (*GetTimetableByHospitalRoomRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{8}
}

func (x *GetTimetableByHospitalRoomRequest) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *GetTimetableByHospitalRoomRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetTimetableByHospitalRoomRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetTimetableByHospitalRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimetableRecordsInfo []*TimetableRecordInfo `protobuf:"bytes,1,rep,name=timetableRecordsInfo,proto3" json:"timetableRecordsInfo,omitempty"`
}

func (x *GetTimetableByHospitalRoomResponse) Reset() {
	*x = GetTimetableByHospitalRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimetableByHospitalRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimetableByHospitalRoomResponse) ProtoMessage() {}

func (x *GetTimetableByHospitalRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimetableByHospitalRoomResponse.ProtoReflect.Descriptor instead.
func (*GetTimetableByHospitalRoomResponse) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{9}
}

func (x *GetTimetableByHospitalRoomResponse) GetTimetableRecordsInfo() []*TimetableRecordInfo {
	if x != nil {
		return x.TimetableRecordsInfo
	}
	return nil
}

type GetFreeCouponsForDoctorsAppointmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentRecordsInfo []*AppointmentRecordInfo `protobuf:"bytes,1,rep,name=appointmentRecordsInfo,proto3" json:"appointmentRecordsInfo,omitempty"`
}

func (x *GetFreeCouponsForDoctorsAppointmentResponse) Reset() {
	*x = GetFreeCouponsForDoctorsAppointmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFreeCouponsForDoctorsAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFreeCouponsForDoctorsAppointmentResponse) ProtoMessage() {}

func (x *GetFreeCouponsForDoctorsAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFreeCouponsForDoctorsAppointmentResponse.ProtoReflect.Descriptor instead.
func (*GetFreeCouponsForDoctorsAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{10}
}

func (x *GetFreeCouponsForDoctorsAppointmentResponse) GetAppointmentRecordsInfo() []*AppointmentRecordInfo {
	if x != nil {
		return x.AppointmentRecordsInfo
	}
	return nil
}

type UpdateTimetableRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimetableRecordInfo *TimetableRecordInfo `protobuf:"bytes,1,opt,name=timetableRecordInfo,proto3" json:"timetableRecordInfo,omitempty"`
}

func (x *UpdateTimetableRecordRequest) Reset() {
	*x = UpdateTimetableRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimetableRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimetableRecordRequest) ProtoMessage() {}

func (x *UpdateTimetableRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimetableRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimetableRecordRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTimetableRecordRequest) GetTimetableRecordInfo() *TimetableRecordInfo {
	if x != nil {
		return x.TimetableRecordInfo
	}
	return nil
}

type DeleteTimetableRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTimetableRecordRequest) Reset() {
	*x = DeleteTimetableRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimetableRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimetableRecordRequest) ProtoMessage() {}

func (x *DeleteTimetableRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimetableRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimetableRecordRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteTimetableRecordRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTimetableRecordByDoctorIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorId int64 `protobuf:"varint,1,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
}

func (x *DeleteTimetableRecordByDoctorIdRequest) Reset() {
	*x = DeleteTimetableRecordByDoctorIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimetableRecordByDoctorIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimetableRecordByDoctorIdRequest) ProtoMessage() {}

func (x *DeleteTimetableRecordByDoctorIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimetableRecordByDoctorIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimetableRecordByDoctorIdRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteTimetableRecordByDoctorIdRequest) GetDoctorId() int64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

type DeleteTimetableRecordByHospitalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HospitalId int64 `protobuf:"varint,1,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
}

func (x *DeleteTimetableRecordByHospitalIdRequest) Reset() {
	*x = DeleteTimetableRecordByHospitalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimetableRecordByHospitalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimetableRecordByHospitalIdRequest) ProtoMessage() {}

func (x *DeleteTimetableRecordByHospitalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimetableRecordByHospitalIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimetableRecordByHospitalIdRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteTimetableRecordByHospitalIdRequest) GetHospitalId() int64 {
	if x != nil {
		return x.HospitalId
	}
	return 0
}

type DeleteAppointmentRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAppointmentRecordRequest) Reset() {
	*x = DeleteAppointmentRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_service_timetable_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppointmentRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppointmentRecordRequest) ProtoMessage() {}

func (x *DeleteAppointmentRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_service_timetable_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppointmentRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppointmentRecordRequest) Descriptor() ([]byte, []int) {
	return file_timetable_service_timetable_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteAppointmentRecordRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_timetable_service_timetable_proto protoreflect.FileDescriptor

var file_timetable_service_timetable_proto_rawDesc = []byte{
	0x0a, 0x21, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x13, 0x54,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6f, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x49, 0x64, 0x22, 0x47, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x13, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x78, 0x0a,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x56, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x15, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x97, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x79, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x93, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x87, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x16, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x70, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x13, 0x74, 0x69, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x0a, 0x1c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x26, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x28, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x30, 0x0a,
	0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x32,
	0x9b, 0x0c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x72, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a,
	0x01, 0x2a, 0x22, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x61, 0x70, 0x69,
	0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x98, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x48,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79,
	0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x61, 0x70, 0x69, 0x2f,
	0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x90, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12,
	0x19, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaa, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x2c, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x48, 0x6f,
	0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x52, 0x6f, 0x6f, 0x6d,
	0x2f, 0x7b, 0x72, 0x6f, 0x6f, 0x6d, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x27, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a, 0x12, 0x61,
	0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x74, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x2a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x31, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x44,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19,
	0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x21, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x33, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x7a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x4b, 0x5a,
	0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x74,
	0x65, 0x7a, 0x7a, 0x49, 0x50, 0x2f, 0x53, 0x69, 0x6d, 0x62, 0x69, 0x72, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x41, 0x50, 0x49, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x3b, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_timetable_service_timetable_proto_rawDescOnce sync.Once
	file_timetable_service_timetable_proto_rawDescData = file_timetable_service_timetable_proto_rawDesc
)

func file_timetable_service_timetable_proto_rawDescGZIP() []byte {
	file_timetable_service_timetable_proto_rawDescOnce.Do(func() {
		file_timetable_service_timetable_proto_rawDescData = protoimpl.X.CompressGZIP(file_timetable_service_timetable_proto_rawDescData)
	})
	return file_timetable_service_timetable_proto_rawDescData
}

var file_timetable_service_timetable_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_timetable_service_timetable_proto_goTypes = []any{
	(*TimetableRecordInfo)(nil),                         // 0: timetable.TimetableRecordInfo
	(*AppointmentRecordInfo)(nil),                       // 1: timetable.AppointmentRecordInfo
	(*CreateTimetableRecordRequest)(nil),                // 2: timetable.CreateTimetableRecordRequest
	(*CreateAppointmentRecordRequest)(nil),              // 3: timetable.CreateAppointmentRecordRequest
	(*GetTimetableByHospitalIdRequest)(nil),             // 4: timetable.GetTimetableByHospitalIdRequest
	(*GetTimetableByHospitalIdResponse)(nil),            // 5: timetable.GetTimetableByHospitalIdResponse
	(*GetTimetableByDoctorIdRequest)(nil),               // 6: timetable.GetTimetableByDoctorIdRequest
	(*GetTimetableByDoctorIdResponse)(nil),              // 7: timetable.GetTimetableByDoctorIdResponse
	(*GetTimetableByHospitalRoomRequest)(nil),           // 8: timetable.GetTimetableByHospitalRoomRequest
	(*GetTimetableByHospitalRoomResponse)(nil),          // 9: timetable.GetTimetableByHospitalRoomResponse
	(*GetFreeCouponsForDoctorsAppointmentResponse)(nil), // 10: timetable.GetFreeCouponsForDoctorsAppointmentResponse
	(*UpdateTimetableRecordRequest)(nil),                // 11: timetable.UpdateTimetableRecordRequest
	(*DeleteTimetableRecordRequest)(nil),                // 12: timetable.DeleteTimetableRecordRequest
	(*DeleteTimetableRecordByDoctorIdRequest)(nil),      // 13: timetable.DeleteTimetableRecordByDoctorIdRequest
	(*DeleteTimetableRecordByHospitalIdRequest)(nil),    // 14: timetable.DeleteTimetableRecordByHospitalIdRequest
	(*DeleteAppointmentRecordRequest)(nil),              // 15: timetable.DeleteAppointmentRecordRequest
	(*timestamppb.Timestamp)(nil),                       // 16: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                               // 17: google.protobuf.Empty
}
var file_timetable_service_timetable_proto_depIdxs = []int32{
	16, // 0: timetable.TimetableRecordInfo.from:type_name -> google.protobuf.Timestamp
	16, // 1: timetable.TimetableRecordInfo.to:type_name -> google.protobuf.Timestamp
	16, // 2: timetable.AppointmentRecordInfo.time:type_name -> google.protobuf.Timestamp
	0,  // 3: timetable.CreateTimetableRecordRequest.timetableRecordInfo:type_name -> timetable.TimetableRecordInfo
	1,  // 4: timetable.CreateAppointmentRecordRequest.appointmentRecordInfo:type_name -> timetable.AppointmentRecordInfo
	16, // 5: timetable.GetTimetableByHospitalIdRequest.from:type_name -> google.protobuf.Timestamp
	16, // 6: timetable.GetTimetableByHospitalIdRequest.to:type_name -> google.protobuf.Timestamp
	0,  // 7: timetable.GetTimetableByHospitalIdResponse.timetableRecordsInfo:type_name -> timetable.TimetableRecordInfo
	16, // 8: timetable.GetTimetableByDoctorIdRequest.from:type_name -> google.protobuf.Timestamp
	16, // 9: timetable.GetTimetableByDoctorIdRequest.to:type_name -> google.protobuf.Timestamp
	0,  // 10: timetable.GetTimetableByDoctorIdResponse.timetableRecordsInfo:type_name -> timetable.TimetableRecordInfo
	16, // 11: timetable.GetTimetableByHospitalRoomRequest.from:type_name -> google.protobuf.Timestamp
	16, // 12: timetable.GetTimetableByHospitalRoomRequest.to:type_name -> google.protobuf.Timestamp
	0,  // 13: timetable.GetTimetableByHospitalRoomResponse.timetableRecordsInfo:type_name -> timetable.TimetableRecordInfo
	1,  // 14: timetable.GetFreeCouponsForDoctorsAppointmentResponse.appointmentRecordsInfo:type_name -> timetable.AppointmentRecordInfo
	0,  // 15: timetable.UpdateTimetableRecordRequest.timetableRecordInfo:type_name -> timetable.TimetableRecordInfo
	2,  // 16: timetable.Timetable.CreateTimetableRecord:input_type -> timetable.CreateTimetableRecordRequest
	3,  // 17: timetable.Timetable.CreateAppointmentRecord:input_type -> timetable.CreateAppointmentRecordRequest
	4,  // 18: timetable.Timetable.GetTimetableByHospitalId:input_type -> timetable.GetTimetableByHospitalIdRequest
	6,  // 19: timetable.Timetable.GetTimetableByDoctorId:input_type -> timetable.GetTimetableByDoctorIdRequest
	8,  // 20: timetable.Timetable.GetTimetableByHospitalRoom:input_type -> timetable.GetTimetableByHospitalRoomRequest
	17, // 21: timetable.Timetable.GetFreeCouponsForDoctorsAppointment:input_type -> google.protobuf.Empty
	11, // 22: timetable.Timetable.UpdateTimetableRecord:input_type -> timetable.UpdateTimetableRecordRequest
	12, // 23: timetable.Timetable.DeleteTimetableRecord:input_type -> timetable.DeleteTimetableRecordRequest
	13, // 24: timetable.Timetable.DeleteTimetableRecordByDoctorId:input_type -> timetable.DeleteTimetableRecordByDoctorIdRequest
	14, // 25: timetable.Timetable.DeleteTimetableRecordByHospitalId:input_type -> timetable.DeleteTimetableRecordByHospitalIdRequest
	15, // 26: timetable.Timetable.DeleteAppointmentRecord:input_type -> timetable.DeleteAppointmentRecordRequest
	17, // 27: timetable.Timetable.CreateTimetableRecord:output_type -> google.protobuf.Empty
	17, // 28: timetable.Timetable.CreateAppointmentRecord:output_type -> google.protobuf.Empty
	5,  // 29: timetable.Timetable.GetTimetableByHospitalId:output_type -> timetable.GetTimetableByHospitalIdResponse
	7,  // 30: timetable.Timetable.GetTimetableByDoctorId:output_type -> timetable.GetTimetableByDoctorIdResponse
	9,  // 31: timetable.Timetable.GetTimetableByHospitalRoom:output_type -> timetable.GetTimetableByHospitalRoomResponse
	10, // 32: timetable.Timetable.GetFreeCouponsForDoctorsAppointment:output_type -> timetable.GetFreeCouponsForDoctorsAppointmentResponse
	17, // 33: timetable.Timetable.UpdateTimetableRecord:output_type -> google.protobuf.Empty
	17, // 34: timetable.Timetable.DeleteTimetableRecord:output_type -> google.protobuf.Empty
	17, // 35: timetable.Timetable.DeleteTimetableRecordByDoctorId:output_type -> google.protobuf.Empty
	17, // 36: timetable.Timetable.DeleteTimetableRecordByHospitalId:output_type -> google.protobuf.Empty
	17, // 37: timetable.Timetable.DeleteAppointmentRecord:output_type -> google.protobuf.Empty
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_timetable_service_timetable_proto_init() }
func file_timetable_service_timetable_proto_init() {
	if File_timetable_service_timetable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timetable_service_timetable_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TimetableRecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AppointmentRecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTimetableRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAppointmentRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimetableByHospitalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimetableByHospitalIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimetableByDoctorIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimetableByDoctorIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimetableByHospitalRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetTimetableByHospitalRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetFreeCouponsForDoctorsAppointmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTimetableRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTimetableRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTimetableRecordByDoctorIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTimetableRecordByHospitalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_service_timetable_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAppointmentRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_timetable_service_timetable_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timetable_service_timetable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timetable_service_timetable_proto_goTypes,
		DependencyIndexes: file_timetable_service_timetable_proto_depIdxs,
		MessageInfos:      file_timetable_service_timetable_proto_msgTypes,
	}.Build()
	File_timetable_service_timetable_proto = out.File
	file_timetable_service_timetable_proto_rawDesc = nil
	file_timetable_service_timetable_proto_goTypes = nil
	file_timetable_service_timetable_proto_depIdxs = nil
}
