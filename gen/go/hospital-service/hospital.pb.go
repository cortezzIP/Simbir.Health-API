// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: hospital-service/hospital.proto

package hospital

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HospitalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address      string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ContactPhone string   `protobuf:"bytes,4,opt,name=contact_phone,json=contactPhone,proto3" json:"contact_phone,omitempty"`
	Rooms        []string `protobuf:"bytes,5,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *HospitalInfo) Reset() {
	*x = HospitalInfo{}
	mi := &file_hospital_service_hospital_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HospitalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospitalInfo) ProtoMessage() {}

func (x *HospitalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospitalInfo.ProtoReflect.Descriptor instead.
func (*HospitalInfo) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{0}
}

func (x *HospitalInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HospitalInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HospitalInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HospitalInfo) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *HospitalInfo) GetRooms() []string {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type CreateHospitalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospital *HospitalInfo `protobuf:"bytes,1,opt,name=hospital,proto3" json:"hospital,omitempty"`
}

func (x *CreateHospitalRequest) Reset() {
	*x = CreateHospitalRequest{}
	mi := &file_hospital_service_hospital_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHospitalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHospitalRequest) ProtoMessage() {}

func (x *CreateHospitalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHospitalRequest.ProtoReflect.Descriptor instead.
func (*CreateHospitalRequest) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHospitalRequest) GetHospital() *HospitalInfo {
	if x != nil {
		return x.Hospital
	}
	return nil
}

type GetAllHospitalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllHospitalsRequest) Reset() {
	*x = GetAllHospitalsRequest{}
	mi := &file_hospital_service_hospital_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllHospitalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHospitalsRequest) ProtoMessage() {}

func (x *GetAllHospitalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHospitalsRequest.ProtoReflect.Descriptor instead.
func (*GetAllHospitalsRequest) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllHospitalsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetAllHospitalsRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllHospitalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospitals []*HospitalInfo `protobuf:"bytes,1,rep,name=hospitals,proto3" json:"hospitals,omitempty"`
}

func (x *GetAllHospitalsResponse) Reset() {
	*x = GetAllHospitalsResponse{}
	mi := &file_hospital_service_hospital_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllHospitalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHospitalsResponse) ProtoMessage() {}

func (x *GetAllHospitalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHospitalsResponse.ProtoReflect.Descriptor instead.
func (*GetAllHospitalsResponse) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllHospitalsResponse) GetHospitals() []*HospitalInfo {
	if x != nil {
		return x.Hospitals
	}
	return nil
}

type GetHospitalByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHospitalByIdRequest) Reset() {
	*x = GetHospitalByIdRequest{}
	mi := &file_hospital_service_hospital_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHospitalByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalByIdRequest) ProtoMessage() {}

func (x *GetHospitalByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalByIdRequest.ProtoReflect.Descriptor instead.
func (*GetHospitalByIdRequest) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{4}
}

func (x *GetHospitalByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHospitalByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospital *HospitalInfo `protobuf:"bytes,1,opt,name=hospital,proto3" json:"hospital,omitempty"`
}

func (x *GetHospitalByIdResponse) Reset() {
	*x = GetHospitalByIdResponse{}
	mi := &file_hospital_service_hospital_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHospitalByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalByIdResponse) ProtoMessage() {}

func (x *GetHospitalByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalByIdResponse.ProtoReflect.Descriptor instead.
func (*GetHospitalByIdResponse) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{5}
}

func (x *GetHospitalByIdResponse) GetHospital() *HospitalInfo {
	if x != nil {
		return x.Hospital
	}
	return nil
}

type GetHospitalsRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHospitalsRoomsRequest) Reset() {
	*x = GetHospitalsRoomsRequest{}
	mi := &file_hospital_service_hospital_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHospitalsRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalsRoomsRequest) ProtoMessage() {}

func (x *GetHospitalsRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalsRoomsRequest.ProtoReflect.Descriptor instead.
func (*GetHospitalsRoomsRequest) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{6}
}

func (x *GetHospitalsRoomsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHospitalsRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []string `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetHospitalsRoomsResponse) Reset() {
	*x = GetHospitalsRoomsResponse{}
	mi := &file_hospital_service_hospital_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHospitalsRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHospitalsRoomsResponse) ProtoMessage() {}

func (x *GetHospitalsRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHospitalsRoomsResponse.ProtoReflect.Descriptor instead.
func (*GetHospitalsRoomsResponse) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{7}
}

func (x *GetHospitalsRoomsResponse) GetRooms() []string {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type UpdateHospitalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hospital *HospitalInfo `protobuf:"bytes,2,opt,name=hospital,proto3" json:"hospital,omitempty"`
}

func (x *UpdateHospitalRequest) Reset() {
	*x = UpdateHospitalRequest{}
	mi := &file_hospital_service_hospital_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHospitalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHospitalRequest) ProtoMessage() {}

func (x *UpdateHospitalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHospitalRequest.ProtoReflect.Descriptor instead.
func (*UpdateHospitalRequest) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateHospitalRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHospitalRequest) GetHospital() *HospitalInfo {
	if x != nil {
		return x.Hospital
	}
	return nil
}

type DeleteHospitalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHospitalRequest) Reset() {
	*x = DeleteHospitalRequest{}
	mi := &file_hospital_service_hospital_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHospitalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHospitalRequest) ProtoMessage() {}

func (x *DeleteHospitalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hospital_service_hospital_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHospitalRequest.ProtoReflect.Descriptor instead.
func (*DeleteHospitalRequest) Descriptor() ([]byte, []int) {
	return file_hospital_service_hospital_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteHospitalRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_hospital_service_hospital_proto protoreflect.FileDescriptor

var file_hospital_service_hospital_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x22, 0x4b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f,
	0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x22, 0x42, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09,
	0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x22, 0x2a, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x5b, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x2e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x32, 0xa5, 0x05, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x64, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12,
	0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x12, 0x6b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x12, 0x20, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73,
	0x12, 0x73, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x22, 0x2e, 0x68, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x69, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x66, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0xc1, 0x01, 0x92, 0x41, 0x75, 0x12, 0x4c,
	0x0a, 0x08, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x22, 0x3b, 0x0a, 0x09, 0x63, 0x6f,
	0x72, 0x74, 0x65, 0x7a, 0x7a, 0x49, 0x50, 0x12, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x74,
	0x65, 0x7a, 0x7a, 0x49, 0x50, 0x2f, 0x53, 0x69, 0x6d, 0x62, 0x69, 0x72, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x32,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x74, 0x65, 0x7a, 0x7a, 0x49, 0x50, 0x2f, 0x53, 0x69, 0x6d, 0x62, 0x69, 0x72,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x3b, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hospital_service_hospital_proto_rawDescOnce sync.Once
	file_hospital_service_hospital_proto_rawDescData = file_hospital_service_hospital_proto_rawDesc
)

func file_hospital_service_hospital_proto_rawDescGZIP() []byte {
	file_hospital_service_hospital_proto_rawDescOnce.Do(func() {
		file_hospital_service_hospital_proto_rawDescData = protoimpl.X.CompressGZIP(file_hospital_service_hospital_proto_rawDescData)
	})
	return file_hospital_service_hospital_proto_rawDescData
}

var file_hospital_service_hospital_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_hospital_service_hospital_proto_goTypes = []any{
	(*HospitalInfo)(nil),              // 0: hospital.HospitalInfo
	(*CreateHospitalRequest)(nil),     // 1: hospital.CreateHospitalRequest
	(*GetAllHospitalsRequest)(nil),    // 2: hospital.GetAllHospitalsRequest
	(*GetAllHospitalsResponse)(nil),   // 3: hospital.GetAllHospitalsResponse
	(*GetHospitalByIdRequest)(nil),    // 4: hospital.GetHospitalByIdRequest
	(*GetHospitalByIdResponse)(nil),   // 5: hospital.GetHospitalByIdResponse
	(*GetHospitalsRoomsRequest)(nil),  // 6: hospital.GetHospitalsRoomsRequest
	(*GetHospitalsRoomsResponse)(nil), // 7: hospital.GetHospitalsRoomsResponse
	(*UpdateHospitalRequest)(nil),     // 8: hospital.UpdateHospitalRequest
	(*DeleteHospitalRequest)(nil),     // 9: hospital.DeleteHospitalRequest
	(*emptypb.Empty)(nil),             // 10: google.protobuf.Empty
}
var file_hospital_service_hospital_proto_depIdxs = []int32{
	0,  // 0: hospital.CreateHospitalRequest.hospital:type_name -> hospital.HospitalInfo
	0,  // 1: hospital.GetAllHospitalsResponse.hospitals:type_name -> hospital.HospitalInfo
	0,  // 2: hospital.GetHospitalByIdResponse.hospital:type_name -> hospital.HospitalInfo
	0,  // 3: hospital.UpdateHospitalRequest.hospital:type_name -> hospital.HospitalInfo
	1,  // 4: hospital.Hospital.CreateHospital:input_type -> hospital.CreateHospitalRequest
	2,  // 5: hospital.Hospital.GetHospitals:input_type -> hospital.GetAllHospitalsRequest
	4,  // 6: hospital.Hospital.GetHospitalById:input_type -> hospital.GetHospitalByIdRequest
	6,  // 7: hospital.Hospital.GetHospitalRooms:input_type -> hospital.GetHospitalsRoomsRequest
	8,  // 8: hospital.Hospital.UpdateHospital:input_type -> hospital.UpdateHospitalRequest
	9,  // 9: hospital.Hospital.DeleteHospital:input_type -> hospital.DeleteHospitalRequest
	10, // 10: hospital.Hospital.CreateHospital:output_type -> google.protobuf.Empty
	3,  // 11: hospital.Hospital.GetHospitals:output_type -> hospital.GetAllHospitalsResponse
	5,  // 12: hospital.Hospital.GetHospitalById:output_type -> hospital.GetHospitalByIdResponse
	7,  // 13: hospital.Hospital.GetHospitalRooms:output_type -> hospital.GetHospitalsRoomsResponse
	10, // 14: hospital.Hospital.UpdateHospital:output_type -> google.protobuf.Empty
	10, // 15: hospital.Hospital.DeleteHospital:output_type -> google.protobuf.Empty
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_hospital_service_hospital_proto_init() }
func file_hospital_service_hospital_proto_init() {
	if File_hospital_service_hospital_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hospital_service_hospital_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hospital_service_hospital_proto_goTypes,
		DependencyIndexes: file_hospital_service_hospital_proto_depIdxs,
		MessageInfos:      file_hospital_service_hospital_proto_msgTypes,
	}.Build()
	File_hospital_service_hospital_proto = out.File
	file_hospital_service_hospital_proto_rawDesc = nil
	file_hospital_service_hospital_proto_goTypes = nil
	file_hospital_service_hospital_proto_depIdxs = nil
}
