// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: document-service/document.proto

package document

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HistoryRecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *int64                 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Date       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	PacientId  int64                  `protobuf:"varint,3,opt,name=pacientId,proto3" json:"pacientId,omitempty"`
	HospitalId int64                  `protobuf:"varint,4,opt,name=hospitalId,proto3" json:"hospitalId,omitempty"`
	DoctorId   int64                  `protobuf:"varint,5,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	Room       string                 `protobuf:"bytes,6,opt,name=room,proto3" json:"room,omitempty"`
	Data       string                 `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HistoryRecordInfo) Reset() {
	*x = HistoryRecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryRecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRecordInfo) ProtoMessage() {}

func (x *HistoryRecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRecordInfo.ProtoReflect.Descriptor instead.
func (*HistoryRecordInfo) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{0}
}

func (x *HistoryRecordInfo) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *HistoryRecordInfo) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *HistoryRecordInfo) GetPacientId() int64 {
	if x != nil {
		return x.PacientId
	}
	return 0
}

func (x *HistoryRecordInfo) GetHospitalId() int64 {
	if x != nil {
		return x.HospitalId
	}
	return 0
}

func (x *HistoryRecordInfo) GetDoctorId() int64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *HistoryRecordInfo) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *HistoryRecordInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CreateHistoryRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryRecordInfo *HistoryRecordInfo `protobuf:"bytes,1,opt,name=historyRecordInfo,proto3" json:"historyRecordInfo,omitempty"`
}

func (x *CreateHistoryRecordRequest) Reset() {
	*x = CreateHistoryRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHistoryRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHistoryRecordRequest) ProtoMessage() {}

func (x *CreateHistoryRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHistoryRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateHistoryRecordRequest) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHistoryRecordRequest) GetHistoryRecordInfo() *HistoryRecordInfo {
	if x != nil {
		return x.HistoryRecordInfo
	}
	return nil
}

type GetHistoryRecordsByPacientIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacientId int64 `protobuf:"varint,1,opt,name=pacientId,proto3" json:"pacientId,omitempty"`
}

func (x *GetHistoryRecordsByPacientIdRequest) Reset() {
	*x = GetHistoryRecordsByPacientIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRecordsByPacientIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRecordsByPacientIdRequest) ProtoMessage() {}

func (x *GetHistoryRecordsByPacientIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRecordsByPacientIdRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRecordsByPacientIdRequest) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{2}
}

func (x *GetHistoryRecordsByPacientIdRequest) GetPacientId() int64 {
	if x != nil {
		return x.PacientId
	}
	return 0
}

type GetHistoryRecordsByPacientIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryRecordsInfo []*HistoryRecordInfo `protobuf:"bytes,1,rep,name=historyRecordsInfo,proto3" json:"historyRecordsInfo,omitempty"`
}

func (x *GetHistoryRecordsByPacientIdResponse) Reset() {
	*x = GetHistoryRecordsByPacientIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRecordsByPacientIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRecordsByPacientIdResponse) ProtoMessage() {}

func (x *GetHistoryRecordsByPacientIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRecordsByPacientIdResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryRecordsByPacientIdResponse) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{3}
}

func (x *GetHistoryRecordsByPacientIdResponse) GetHistoryRecordsInfo() []*HistoryRecordInfo {
	if x != nil {
		return x.HistoryRecordsInfo
	}
	return nil
}

type GetHistoryRecordByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHistoryRecordByIdRequest) Reset() {
	*x = GetHistoryRecordByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRecordByIdRequest) ProtoMessage() {}

func (x *GetHistoryRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{4}
}

func (x *GetHistoryRecordByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHistoryRecordByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryRecordInfo *HistoryRecordInfo `protobuf:"bytes,1,opt,name=historyRecordInfo,proto3" json:"historyRecordInfo,omitempty"`
}

func (x *GetHistoryRecordByIdResponse) Reset() {
	*x = GetHistoryRecordByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRecordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRecordByIdResponse) ProtoMessage() {}

func (x *GetHistoryRecordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRecordByIdResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryRecordByIdResponse) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{5}
}

func (x *GetHistoryRecordByIdResponse) GetHistoryRecordInfo() *HistoryRecordInfo {
	if x != nil {
		return x.HistoryRecordInfo
	}
	return nil
}

type UpdateHistoryRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HistoryRecordInfo *HistoryRecordInfo `protobuf:"bytes,2,opt,name=historyRecordInfo,proto3" json:"historyRecordInfo,omitempty"`
}

func (x *UpdateHistoryRecordRequest) Reset() {
	*x = UpdateHistoryRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_service_document_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHistoryRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHistoryRecordRequest) ProtoMessage() {}

func (x *UpdateHistoryRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_service_document_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHistoryRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateHistoryRecordRequest) Descriptor() ([]byte, []int) {
	return file_document_service_document_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateHistoryRecordRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHistoryRecordRequest) GetHistoryRecordInfo() *HistoryRecordInfo {
	if x != nil {
		return x.HistoryRecordInfo
	}
	return nil
}

var File_document_service_document_proto protoreflect.FileDescriptor

var file_document_service_document_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x50, 0x61, 0x63, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79,
	0x50, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x12, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x77, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0x8c, 0x04, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6b,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b,
	0x61, 0x70, 0x69, 0x2f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x9f, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x42, 0x79, 0x50, 0x61, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x50, 0x61, 0x63, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x50, 0x61, 0x63, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x2f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7f, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x61, 0x70,
	0x69, 0x2f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x70,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x1a, 0x10,
	0x61, 0x70, 0x69, 0x2f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x74, 0x65, 0x7a, 0x7a, 0x49, 0x50, 0x2f, 0x53, 0x69, 0x6d, 0x62, 0x69, 0x72, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x3b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_document_service_document_proto_rawDescOnce sync.Once
	file_document_service_document_proto_rawDescData = file_document_service_document_proto_rawDesc
)

func file_document_service_document_proto_rawDescGZIP() []byte {
	file_document_service_document_proto_rawDescOnce.Do(func() {
		file_document_service_document_proto_rawDescData = protoimpl.X.CompressGZIP(file_document_service_document_proto_rawDescData)
	})
	return file_document_service_document_proto_rawDescData
}

var file_document_service_document_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_document_service_document_proto_goTypes = []any{
	(*HistoryRecordInfo)(nil),                    // 0: document.HistoryRecordInfo
	(*CreateHistoryRecordRequest)(nil),           // 1: document.CreateHistoryRecordRequest
	(*GetHistoryRecordsByPacientIdRequest)(nil),  // 2: document.GetHistoryRecordsByPacientIdRequest
	(*GetHistoryRecordsByPacientIdResponse)(nil), // 3: document.GetHistoryRecordsByPacientIdResponse
	(*GetHistoryRecordByIdRequest)(nil),          // 4: document.GetHistoryRecordByIdRequest
	(*GetHistoryRecordByIdResponse)(nil),         // 5: document.GetHistoryRecordByIdResponse
	(*UpdateHistoryRecordRequest)(nil),           // 6: document.UpdateHistoryRecordRequest
	(*timestamppb.Timestamp)(nil),                // 7: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                        // 8: google.protobuf.Empty
}
var file_document_service_document_proto_depIdxs = []int32{
	7, // 0: document.HistoryRecordInfo.date:type_name -> google.protobuf.Timestamp
	0, // 1: document.CreateHistoryRecordRequest.historyRecordInfo:type_name -> document.HistoryRecordInfo
	0, // 2: document.GetHistoryRecordsByPacientIdResponse.historyRecordsInfo:type_name -> document.HistoryRecordInfo
	0, // 3: document.GetHistoryRecordByIdResponse.historyRecordInfo:type_name -> document.HistoryRecordInfo
	0, // 4: document.UpdateHistoryRecordRequest.historyRecordInfo:type_name -> document.HistoryRecordInfo
	1, // 5: document.Document.CreateHistoryRecord:input_type -> document.CreateHistoryRecordRequest
	2, // 6: document.Document.GetHistoryRecordsByPacientId:input_type -> document.GetHistoryRecordsByPacientIdRequest
	4, // 7: document.Document.GetHistoryRecordById:input_type -> document.GetHistoryRecordByIdRequest
	6, // 8: document.Document.UpdateHistoryRecord:input_type -> document.UpdateHistoryRecordRequest
	8, // 9: document.Document.CreateHistoryRecord:output_type -> google.protobuf.Empty
	3, // 10: document.Document.GetHistoryRecordsByPacientId:output_type -> document.GetHistoryRecordsByPacientIdResponse
	5, // 11: document.Document.GetHistoryRecordById:output_type -> document.GetHistoryRecordByIdResponse
	8, // 12: document.Document.UpdateHistoryRecord:output_type -> google.protobuf.Empty
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_document_service_document_proto_init() }
func file_document_service_document_proto_init() {
	if File_document_service_document_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_document_service_document_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryRecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_service_document_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateHistoryRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_service_document_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetHistoryRecordsByPacientIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_service_document_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetHistoryRecordsByPacientIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_service_document_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetHistoryRecordByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_service_document_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetHistoryRecordByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_service_document_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateHistoryRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_document_service_document_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_document_service_document_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_document_service_document_proto_goTypes,
		DependencyIndexes: file_document_service_document_proto_depIdxs,
		MessageInfos:      file_document_service_document_proto_msgTypes,
	}.Build()
	File_document_service_document_proto = out.File
	file_document_service_document_proto_rawDesc = nil
	file_document_service_document_proto_goTypes = nil
	file_document_service_document_proto_depIdxs = nil
}
